<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="description" content="Building better businesses" >
    <meta name="keywords" content="business services, trades" >
    <meta name="author" content="Jon Hill" >
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0,  maximum-scale=1 " >
    <title>Hourwise</title>    

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
    <!-- =========================
     FAV AND TOUCH ICONS  
    ============================== -->
    <link rel="shortcut icon" href="assets/images/icons/favicon.png">
    <link rel="apple-touch-icon" href="assets/images/icons/favicon.png">
    
    <!--STYLES DON'T AUTOLOAD-->
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/owl.theme.css">
    <link rel="stylesheet" href="/styles/owl.carousel.css">
    <link rel="stylesheet" href="/styles/jquery.vegas.min.css">
    <link rel="stylesheet" href="/styles/animate.min.css">
    <!-- <link rel="stylesheet" href="/styles/importer.css"> -->


    <link rel="stylesheet" href="/assets/icon-fonts/styles.css"> 
    <link rel="stylesheet" href="/styles/pixeden-icons.css">
    
    <!-- CUSTOM STYLES -->    
    <link rel="stylesheet" href="/styles/styles.css">
    <link rel="stylesheet" href="/styles/responsive.css">
    
    <!-- WEBFONT -->
    <link href='http://fonts.googleapis.com/css?family=Lato:300,400,700,400italic|Montserrat:700,400|Homemade+Apple' rel='stylesheet' type='text/css'>
    
    <!--[if lt IE 9]>
          <script src="js/html5shiv.js"></script>
          <script src="js/respond.min.js"></script>
        <![endif]-->
    
    <!-- JQUERY -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <!-- Begin Inspectlet Embed Code -->
    <!--
    <script type="text/javascript" id="inspectletjs">
     window.__insp = window.__insp || [];
     __insp.push(['wid', 1404777810]);
    (function() {
     function __ldinsp(){var insp = document.createElement('script'); insp.type = 'text/javascript'; insp.async = true; insp.id = "inspsync"; insp.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://cdn.inspectlet.com/inspectlet.js'; var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(insp, x); }
        if (window.attachEvent){
          window.attachEvent('onload', __ldinsp);
        }else{
          window.addEventListener('load', __ldinsp, false);
        }
      })();
    </script>
    -->
    <!-- End Inspectlet Embed Code -->
    <!-- Begin Google Analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-39616852-2', 'auto');
  ga('send', 'pageview');

</script>
    <!-- End Google Analytics -->
    
    <!-- Begin Pixels -->
    <!--
    <script>(function() {
      var _fbq = window._fbq || (window._fbq = []);
      if (!_fbq.loaded) {
        var fbds = document.createElement('script');
        fbds.async = true;
        fbds.src = '//connect.facebook.net/en_US/fbds.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(fbds, s);
        _fbq.loaded = true;
      }
      _fbq.push(['addPixelId', '1614923785402447']);
    })();
    window._fbq = window._fbq || [];
    window._fbq.push(['track', 'PixelInitialized', {}]);
    </script>
    <noscript><img height="1" width="1" alt="" style="display:none" src="https://www.facebook.com/tr?id=1614923785402447&amp;ev=PixelInitialized" /></noscript>
    -->
    <!-- End Pixels -->






  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS DON'T AUTOLOAD-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script>io.sails.transports=['websocket']</script>
    <!-- // <script src="/js/dependencies/app.js"></script> -->
    <script src="/js/bootstrap.min.js"></script>    
    <script src="/js/html5shiv.js"></script>
    <script src="/js/jquery.fittext.js"></script>
    <script src="/js/jquery.knob.js"></script>
    <script src="/js/jquery.nav.js"></script>
    <script src="/js/jquery.scrollTo.min.js"></script>
    <script src="/js/jquery.vegas.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/respond.min.js"></script>
    <script src="/js/scrollReveal.js"></script>
    <script src="/js/smoothscroll.js"></script>
    <script src="/js/wow.min.js"></script>
    <script src="/js/zerif.js"></script>


    <!--SCRIPTS END-->    

  </body>
</html>
